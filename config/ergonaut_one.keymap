#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "balanced";
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q       &kp W       &kp E        &kp R         &kp T    &kp Y        &kp U         &kp I            &kp O       &kp P               &none
&none  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHIFT F  &kp G    &kp H        &hm RSHIFT J  &hm RCTRL K      &hm RALT L  &hm RGUI LS(COMMA)  &none
&none  &kp Z       &kp X       &kp C        &kp V         &kp B    &kp N        &kp M         &kp COMMA        &kp DOT     &kp LS(NUMBER_7)    &none
                               &lt 4 ESC    &lt 2 SPACE   &kp TAB  &lt 3 ENTER  &lt 1 DEL     &lt 3 BACKSPACE
            >;
        };

        symbol_layer {
            bindings = <
&none  &kp RA(NUMBER_0)  &kp LS(NUMBER_6)  &kp LEFT_BRACE    &kp TILDE         &kp AT_SIGN       &kp MINUS  &kp LS(SLASH)              &kp LS(NUMBER_0)               &kp EQUAL                    &kp SQT                  &bootloader
&none  &kp LS(NUMBER_9)  &kp LS(NUMBER_1)  &kp RA(NUMBER_2)  &kp HASH          &kp LEFT_BRACKET  &kp SLASH  &hm RIGHT_SHIFT BACKSLASH  &hm RIGHT_CONTROL RIGHT_BRACE  &hm RIGHT_ALT RIGHT_BRACKET  &hm RIGHT_WIN SEMICOLON  &none
&none  &kp RA(NUMBER_9)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp PIPE          &none             &none      &none                      &kp GRAVE                      &kp LS(EQUAL)                &kp DOUBLE_QUOTES        &none
                                           &kp RA(NUMBER_7)  &kp RA(NUMBER_8)  &kp ASTERISK      &none      &none                      &none
            >;
        };

        number_layer {
            bindings = <
&bootloader  &none                  &kp NUMBER_7           &kp NUMBER_8        &kp NUMBER_9             &none  &kp F12  &kp F9              &kp F8                &kp F7       &none          &none
&none        &hm LEFT_WIN NUMBER_0  &hm LEFT_ALT NUMBER_1  &hm LCTRL NUMBER_2  &hm LEFT_SHIFT NUMBER_3  &none  &kp F11  &hm RIGHT_SHIFT F3  &hm RIGHT_CONTROL F2  &hm RALT F1  &kp RIGHT_GUI  &none
&none        &none                  &kp NUMBER_4           &kp NUMBER_5        &kp NUMBER_6             &none  &kp F10  &kp F6              &kp F5                &kp F4       &none          &none
                                                           &none               &none                    &none  &none    &none               &none
            >;
        };

        navigation_layer {
            bindings = <
&none  &out OUT_BLE  &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &none     &none     &none                 &none                     &none           &none
&none  &kp LEFT_WIN  &kp LEFT_ALT      &kp LCTRL         &kp LEFT_SHIFT    &none             &kp LEFT  &kp DOWN  &kp UP                &kp RIGHT                 &kp LS(PERIOD)  &none
&none  &out OUT_USB  &bt BT_CLR_CMD 0  &bt BT_CLR_CMD 1  &bt BT_CLR_CMD 2  &bt BT_CLR_CMD 3  &none     &none     &kp NON_US_BACKSLASH  &kp LS(NON_US_BACKSLASH)  &kp LS(MINUS)   &none
                                       &none             &none             &none             &none     &none     &none
            >;
        };

        Lazyness {
            bindings = <
&none   &none      &trans           &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp PRINTSCREEN  &trans     &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LC(Z)  &kp RC(X)        &kp RC(C)  &kp LC(V)  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans     &trans     &trans  &trans  &trans  &trans
            >;
        };
    };
};
